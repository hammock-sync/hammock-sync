apply plugin: 'com.android.library'
apply plugin: 'maven-publish'
apply plugin: 'signing'

def testConfig = convertTestSysPropsToHash()

android {
    namespace 'org.hammock.sync.encrypt'
    testNamespace 'org.hammock.sync.test'
    compileSdk 33
    defaultConfig {
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String[][]", "TEST_CONFIG", testConfig
    }

    sourceSets {
        main {
            java {
                srcDirs "src/main/java"
            }
            res {
                srcDirs "src/main/res"
            }
        }
        androidTest {
            java {
                srcDirs = ["/src/androidTest/java" /*,
                           "../hammock-sync-datastore-core/src/test/java"*/
                ]
                // we would exclude these via categories but it doesn't like the android runner respects them
                exclude '**/Unreliable*Test*'
                // some of these tests fail as follows:
                // java.lang.OutOfMemoryError: Failed to allocate a
                // 8204 byte allocation with 4194304 free bytes and
                // 8MB until OOM; failed due to fragmentation
                // (required continguous free 12288 bytes where
                // largest contiguous free 8192 bytes)
                //exclude '**/KeyManagerTests*'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    publishing {
        singleVariant("release") {
            withSourcesJar()
            withJavadocJar()
        }
    }
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module('org.hamcrest:hamcrest-core:1.3') using module('junit:junit:4.13.2')
    }
}


dependencies {
    implementation "net.zetetic:sqlcipher-android:4.6.0@aar"
    implementation "androidx.sqlite:sqlite:2.3.0"
    api project(':datastore-android')
    api project(':datastore-core')

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.14.2'
    implementation group: 'commons-codec', name: 'commons-codec', version:'1.15'
    implementation group: 'commons-io', name: 'commons-io', version:'2.16.1'

    // for unit tests
    androidTestImplementation 'org.hamcrest:hamcrest-all:1.3'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation 'org.mockito:mockito-core:5.1.1'
    androidTestImplementation 'com.linkedin.dexmaker:dexmaker-mockito-inline:2.28.1'
}

repositories {
    google()
    mavenCentral()
}

task copyFixtures(type: Copy) {
    from '../fixture'
    into 'src/androidTest/resources/fixture'
}
preBuild.dependsOn copyFixtures

static def convertTestSysPropsToHash (){
    return "{" +
            System.properties
                    .grep { prop -> prop.key.startsWith("test") }
                    .collect(new ArrayList()) { prop -> "{\""+prop.key+"\",\""+ prop.value+"\"}"}
                    .join(",") +
            "}"
}

publishing {
    publications {
        release(MavenPublication) {
            afterEvaluate {
                from components.release
            }
            pom {
                name = 'Hammock Sync Android Encription Library'
                description = 'Android encripted storage implementation for the Hammock Sync Library'
                url = 'https://github.com/hammock-sync/hammock-sync'
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'Hammock Sync Team'
                        email = 'hammock-sync@lksnext.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/hammock-sync/hammock-sync.git'
                    url = 'https://github.com/hammock-sync/hammock-sync'
                }

            }
        }
    }
}
signing {
    required { isReleaseVersion && gradle.taskGraph.hasTask("publishToMavenLocal")}
    sign publishing.publications.release
}
