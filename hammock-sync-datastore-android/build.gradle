plugins {
    id 'com.android.library'
}

def testConfig = convertTestSysPropsToHash()

android {
    namespace 'org.hammock.sync'
    compileSdk 33
    defaultConfig {
        minSdk 29
        targetSdk 33
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        buildConfigField "String[][]", "TEST_CONFIG", testConfig
    }

    sourceSets {
        main {
            java.srcDirs = [
                           /* "../cloudant-http/src/main/java",
                            "../hammock-sync-datastore-core/src/main/java",*/
                            "src/main/java"
                            ]
            assets {
                srcDirs "src/main/assets"
            }
            res {
                srcDirs 'src\\main\\res', 'src\\androidTest\\res'
            }
        }
        androidTest {
            resources {
                srcDirs "src/androidTest/assets"
            }
            java {
                srcDirs = [/*"/src/androidTest/java" ,*/
                           "../hammock-sync-datastore-core/src/test/java"
                ]
                // we would exclude these via categories but it doesn't like the android runner respects them
                exclude '**/Unreliable*Test*'
                // some of these tests fail as follows:
                // java.lang.OutOfMemoryError: Failed to allocate a
                // 8204 byte allocation with 4194304 free bytes and
                // 8MB until OOM; failed due to fragmentation
                // (required continguous free 12288 bytes where
                // largest contiguous free 8192 bytes)
                exclude '**/KeyManagerTests*'
            }
        }
    }
}

configurations.all {
    resolutionStrategy.dependencySubstitution {
        substitute module('org.hamcrest:hamcrest-core:1.3') using module('junit:junit:4.13.2')
    }
}

dependencies {
    implementation project(':hammock-sync-datastore-core')
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.legacy:legacy-support-core-utils:1.0.0'
    //compileOnly(group: 'com.squareup.okhttp3', name: 'okhttp-urlconnection', version: '3.13.1')

    implementation project(':cloudant-http')
    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version:'2.14.2'
    implementation group: 'commons-codec', name: 'commons-codec', version:'1.15'
    implementation group: 'commons-io', name: 'commons-io', version:'2.11.0'

    // for unit tests
    //androidTestImplementation "androidx.startup:startup-runtime:1.1.1"
    androidTestImplementation 'org.hamcrest:hamcrest-all:1.3'
    androidTestImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation "androidx.test:runner:1.5.2"
    androidTestImplementation 'org.mockito:mockito-android:5.1.1'
   // androidTestImplementation 'com.google.android:android-test:4.1.1.4'

}

repositories {
    google()
    mavenCentral()
}

task uploadFixtures(type:Exec) {
    // need to upload the fixtures to the device/emulator external storage
    commandLine "${android.getSdkDirectory().getAbsolutePath()}/platform-tools/adb","push", "-p", "../fixture/.", "/sdcard/fixture/"
}

task copyFixtures(type: Copy) {
    from '../fixture'
    into 'src/androidTest/assets/fixture'
}
/*
tasks.whenTaskAdded { task ->
    if (task.name == 'generateDebugAssets')
        task.dependsOn('copyFixtures')
}
*/

def convertTestSysPropsToHash (){
    return "{" +
            System.properties
                    .grep { prop -> prop.key.startsWith("test") }
                    .collect(new ArrayList()) { prop -> "{\""+prop.key+"\",\""+ prop.value+"\"}"}
                    .join(",") +
            "}"
}