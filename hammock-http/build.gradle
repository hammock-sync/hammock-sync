/*
 * Copyright Â© 2016 IBM Corp. All rights reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file
 * except in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the
 * License is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND,
 * either express or implied. See the License for the specific language governing permissions
 * and limitations under the License.
 */

apply plugin: 'java'
apply plugin: 'com.github.spotbugs'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    toolchain {
        sourceCompatibility = JavaLanguageVersion.of(8)
        targetCompatibility = JavaLanguageVersion.of(8)
    }
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation group: 'commons-io', name: 'commons-io', version: '2.11.0'

    //needed to compile, but optional for consumers of java-cloudant
    compileOnly(group: 'com.squareup.okhttp3', name: 'okhttp-urlconnection', version: '3.13.1')
}

javadoc {
    include("**/http/*")
    include("**/http/interceptors/*")
    exclude("**/http/Version.java")
}

spotbugs {
    toolVersion = "3.1.12"
    // Report only high severity bugs for now
    reportLevel = "low"
    // The code base is pretty small so use max effort
    effort = "max"
    // We don't want to run findbugs on the test code yet
 //   sourceSets = [sourceSets.main]
    // Exclude a couple of known bugs until we get the chance to fix them
    if (file("spotbugs_excludes.xml").exists()) {
        excludeFilter = file("spotbugs_excludes.xml")
    }
}