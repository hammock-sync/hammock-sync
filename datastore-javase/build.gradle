apply plugin: 'java'
apply plugin: 'maven-publish'
apply plugin: 'com.github.spotbugs'
apply plugin: 'signing'

tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

java {
    sourceCompatibility = JavaVersion.VERSION_1_8
    targetCompatibility = JavaVersion.VERSION_1_8

    toolchain {
        sourceCompatibility = JavaLanguageVersion.of(8)
        targetCompatibility = JavaLanguageVersion.of(8)
    }
    withJavadocJar()
    withSourcesJar()
}

repositories {
    mavenLocal()
    mavenCentral()
}

dependencies {
    implementation project(':datastore-core')
    implementation group: 'com.almworks.sqlite4java', name: 'sqlite4java', version: '1.0.392'

    // there are a couple of unit tests in this project
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version:'1.3'
    testImplementation group: 'junit', name: 'junit', version:'4.13.2'
    testImplementation group: 'org.mockito', name: 'mockito-all', version:'1.10.19'
    testImplementation 'commons-validator:commons-validator:1.7'
    // and we depend on some test utilities over in core

    testImplementation project(':datastore-core').sourceSets.test.output
}

task copyFixtures(type: Copy) {
    from '../fixture'
    into 'fixture'
}

tasks.withType(Test) {
    //dependsOn copyFixtures
    //testClassesDirs += project(':hammock-sync-datastore-core').sourceSets.test.output
    // the native dir is one directory up from the core project dir
    systemProperty "sqlite4java.library.path", "./native"
    systemProperty "file.encoding", "UTF-8"

}

task listJars doLast() {
    configurations.testCompile.each { File file -> println file.name }
}

tasks.withType(Test) {
    testLogging {
        // Get full exception info for test failures
        exceptionFormat = 'full'
        showExceptions = true
        showCauses = true
        showStackTraces = true
    }
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
            pom {
                name = 'Hammock Sync JavaSE support library'
                description = 'JavaSE support for Hammock Sync Library'
                url = 'https://github.com/hammock-sync/hammock-sync'
                licenses {
                    license {
                        name = 'Apache-2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        name = 'Hammock Sync Team'
                        email = 'hammock-sync@lksnext.com'
                    }
                }
                scm {
                    connection = 'scm:git:git://github.com/hammock-sync/hammock-sync.git'
                    url = 'https://github.com/hammock-sync/hammock-sync'
                }
            }
        }
    }
}

signing {
    required { !isReleaseVersion && gradle.taskGraph.hasTask("publishToMavenLocal")}
    sign publishing.publications.mavenJava
}

spotbugs {
    toolVersion = "4.7.3"
    // Report only high severity bugs for now
    reportLevel = "low"
    // The code base is pretty small so use max effort
    effort = "max"
    // We don't want to run findbugs on the test code yet
    //   sourceSets = [sourceSets.main]
    // Exclude a couple of known bugs until we get the chance to fix them
    if (file("spotbugs_excludes.xml").exists()) {
        excludeFilter = file("spotbugs_excludes.xml")
    }
}

spotbugsTest {
    enabled = false
}
